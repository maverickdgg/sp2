<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.10">
  <compounddef id="structVector3" kind="struct" language="C++" prot="public">
    <compoundname>Vector3</compoundname>
    <includes refid="Vector3_8h" local="no">Vector3.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structVector3_1a7e2d3237b29a2f29d7b3d8b2934e35f2" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float Vector3::x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Common Library/Source/Vector3.h" line="27" column="1" bodyfile="Common Library/Source/Vector3.h" bodystart="27" bodyend="-1"/>
        <referencedby refid="Collision_8h_1a4b9eee107300119860880f48b79da32f" compoundref="Collision_8cpp" startline="3" endline="35">collision</referencedby>
        <referencedby refid="Collision_8h_1a5ced462f9fcc3c9963cdf5e0da071631" compoundref="Collision_8cpp" startline="42" endline="66">collisionXZ</referencedby>
        <referencedby refid="structVector3_1aa1cdc5357009b47fe585ddd61e263aad" compoundref="Vector3_8cpp" startline="319" endline="322">Cross</referencedby>
        <referencedby refid="structVector3_1a71b1271deb064c65f9dc7dba638c5b57" compoundref="Vector3_8cpp" startline="303" endline="306">Dot</referencedby>
        <referencedby refid="structVector3_1affeb6d657b146584b5cb0b42a0d6eaeb" compoundref="Vector3_8cpp" startline="91" endline="94">IsZero</referencedby>
        <referencedby refid="structVector3_1a200024a8442329de9a625ed58ffe7075" compoundref="Vector3_8cpp" startline="273" endline="276">Length</referencedby>
        <referencedby refid="structVector3_1a87c90f81b4044393fe18f7a1e90f26df" compoundref="Vector3_8cpp" startline="287" endline="290">LengthSquared</referencedby>
        <referencedby refid="LoadOBJ_8h_1aa634e9cac0a72d751731db6b4479cbda" compoundref="LoadOBJ_8cpp" startline="8" endline="116">LoadOBJ</referencedby>
        <referencedby refid="classBB8_1aab6c34b90dab5887f0563060a20838e4" compoundref="BB-8_8cpp" startline="62" endline="67">BB8::move</referencedby>
        <referencedby refid="classBB8v2_1a4d48f1032bb60950982b908efeb3ca95" compoundref="BB-8__2_8cpp" startline="62" endline="67">BB8v2::move</referencedby>
        <referencedby refid="classPlatform_1a486c573852bfdb54819927a5870556d3" compoundref="Platform_8cpp" startline="61" endline="66">Platform::move</referencedby>
        <referencedby refid="classPlayer_1a5b057a6cd421a056d2a0694ab00739e7" compoundref="Player_8cpp" startline="48" endline="174">Player::movementUpdate</referencedby>
        <referencedby refid="structVector3_1aaef4f25a38878a640ab4a48002a7eff8" compoundref="Vector3_8cpp" startline="358" endline="367">Normalize</referencedby>
        <referencedby refid="structVector3_1a2da0f00c5529bced69763320dac9c414" compoundref="Vector3_8cpp" startline="337" endline="343">Normalized</referencedby>
        <referencedby refid="structVector3_1a27ba9abc0d1b5cd47a0365a4ebcfeb7c" compoundref="Vector3_8cpp" startline="241" endline="244">operator!=</referencedby>
        <referencedby refid="classMtx44_1a20fe7d5d35374ea122848a8778de25e6" compoundref="Mtx44_8cpp" startline="294" endline="300">Mtx44::operator*</referencedby>
        <referencedby refid="structVector3_1ab8bb1a236776d951a2e43b3ca9448bb2" compoundref="Vector3_8cpp" startline="189" endline="192">operator*</referencedby>
        <referencedby refid="structVector3_1ab337fe4b0c5fd44657f42427e265c982" compoundref="Vector3_8cpp" startline="205" endline="211">operator*=</referencedby>
        <referencedby refid="structVector3_1a90c345c2a67d220a474a6f209102634d" compoundref="Vector3_8cpp" startline="107" endline="110">operator+</referencedby>
        <referencedby refid="structVector3_1a339c80afd026abb2e35a4ae88301928b" compoundref="Vector3_8cpp" startline="123" endline="129">operator+=</referencedby>
        <referencedby refid="structVector3_1a224d913ac29766a57a5d7c96eb226b92" compoundref="Vector3_8cpp" startline="141" endline="144">operator-</referencedby>
        <referencedby refid="structVector3_1af0c657bdd493fcece630dc985a8e7378" compoundref="Vector3_8cpp" startline="157" endline="163">operator-=</referencedby>
        <referencedby refid="Vector3_8cpp_1a2bb22d81325ba847b6c54c8ad769b5d1" compoundref="Vector3_8cpp" startline="369" endline="373">operator&lt;&lt;</referencedby>
        <referencedby refid="structVector3_1afbfdb69cef54e84d72d05c3c141e315f" compoundref="Vector3_8cpp" startline="256" endline="262">operator=</referencedby>
        <referencedby refid="structVector3_1ae084cfb19c537457f52bfb3cb3a7054d" compoundref="Vector3_8cpp" startline="225" endline="228">operator==</referencedby>
        <referencedby refid="classLoadingScene_1a20d69f97ec73d55519a3481f32dd804b" compoundref="LoadingScene_8cpp" startline="335" endline="364">LoadingScene::Render</referencedby>
        <referencedby refid="classSp2__Scene1_1a5d45996751484538f8f7675a1db98979" compoundref="Sp2__Scene1_8cpp" startline="741" endline="786">Sp2_Scene1::Render</referencedby>
        <referencedby refid="classSp2__Scene3_1a2227ee0830c9d5f4ca486cc70b140331" compoundref="SP2__Scene3_8cpp" startline="1527" endline="1581">Sp2_Scene3::Render</referencedby>
        <referencedby refid="classSp2__SpaceRace_1a6e5a16911da0317ddce3175936fb316d" compoundref="Sp2__SpaceRace_8cpp" startline="923" endline="1010">Sp2_SpaceRace::Render</referencedby>
        <referencedby refid="classSp2__Scene1_1affd071d43ef2fca91b096e7e7963f7d1" compoundref="Sp2__Scene1_8cpp" startline="537" endline="560">Sp2_Scene1::RenderBB8</referencedby>
        <referencedby refid="classSp2__Scene3_1ae73b4bf302e532be99afd20b64af68c9" compoundref="SP2__Scene3_8cpp" startline="919" endline="962">Sp2_Scene3::RenderBB8v2</referencedby>
        <referencedby refid="classSp2__Scene3_1aaf2c3e791d4ccba1e3b1e76d9df0d9bb" compoundref="SP2__Scene3_8cpp" startline="1251" endline="1267">Sp2_Scene3::RenderChestBurster</referencedby>
        <referencedby refid="classSp2__Scene3_1aee8c1d7c9bd31063ba0f0a0f8c0eb10f" compoundref="SP2__Scene3_8cpp" startline="1269" endline="1285">Sp2_Scene3::RenderChestBurster1</referencedby>
        <referencedby refid="classLoadingScene_1a35ba516ca75c80353cd958f6393b4ef7" compoundref="LoadingScene_8cpp" startline="312" endline="328">LoadingScene::Renderfps</referencedby>
        <referencedby refid="classSp2__Scene1_1ad6a43af14f5aca3417deea62b24dbc7e" compoundref="Sp2__Scene1_8cpp" startline="672" endline="733">Sp2_Scene1::Renderfps</referencedby>
        <referencedby refid="classSp2__SpaceRace_1afe1631510dcb1ed61a327ce0e3787745" compoundref="Sp2__SpaceRace_8cpp" startline="754" endline="857">Sp2_SpaceRace::Renderfps</referencedby>
        <referencedby refid="classSp2__Scene3_1a43e8c34b03c54e12d61a707e5e10e4f2" compoundref="SP2__Scene3_8cpp" startline="1444" endline="1519">Sp2_Scene3::Renderfps</referencedby>
        <referencedby refid="classSp2__Scene1_1aeabebe615a8a759a67df19a5d622f666" compoundref="Sp2__Scene1_8cpp" startline="477" endline="498">Sp2_Scene1::RenderGameObj</referencedby>
        <referencedby refid="classSp2__SpaceRace_1a21eaef4ef696d83ad357ee8c0ec4bb16" compoundref="Sp2__SpaceRace_8cpp" startline="580" endline="603">Sp2_SpaceRace::RenderGameObj</referencedby>
        <referencedby refid="classSp2__Scene3_1a57f6c020216c4093a312595a01d3e35e" compoundref="SP2__Scene3_8cpp" startline="873" endline="899">Sp2_Scene3::RenderGameObj</referencedby>
        <referencedby refid="classSp2__Scene3_1af977943490d876a299b08644b5f0ebcd" compoundref="SP2__Scene3_8cpp" startline="1176" endline="1247">Sp2_Scene3::RenderMedic</referencedby>
        <referencedby refid="classLoadingScene_1ac183e240781b77c43cdf4c490f5358e8" compoundref="LoadingScene_8cpp" startline="287" endline="309">LoadingScene::RenderMeshOnScreen</referencedby>
        <referencedby refid="classSp2__Scene1_1aebb431e1bbb2f71c0a18c01c47cd2f8d" compoundref="Sp2__Scene1_8cpp" startline="647" endline="669">Sp2_Scene1::RenderMeshOnScreen</referencedby>
        <referencedby refid="classSp2__SpaceRace_1ab0f4ca726823858a22af078333c90c8b" compoundref="Sp2__SpaceRace_8cpp" startline="711" endline="733">Sp2_SpaceRace::RenderMeshOnScreen</referencedby>
        <referencedby refid="classSp2__Scene3_1a47e7097fa3f498d2496cffad65ef2539" compoundref="SP2__Scene3_8cpp" startline="1400" endline="1422">Sp2_Scene3::RenderMeshOnScreen</referencedby>
        <referencedby refid="classSp2__Scene3_1a485e611aa8f811d187cbf0f444ae8704" compoundref="SP2__Scene3_8cpp" startline="1287" endline="1302">Sp2_Scene3::RenderNecromancer</referencedby>
        <referencedby refid="classSp2__Scene3_1aa9b81af61da8677203bf3e15f8526d15" compoundref="SP2__Scene3_8cpp" startline="1039" endline="1174">Sp2_Scene3::RenderPlatform</referencedby>
        <referencedby refid="classSp2__Scene3_1ac03a8ab64a3e0fbd62ae9cda9ef2daa4" compoundref="SP2__Scene3_8cpp" startline="1304" endline="1313">Sp2_Scene3::RenderRocket</referencedby>
        <referencedby refid="classSp2__Scene3_1a001ac341d244cfd9b1c0acb45c973263" compoundref="SP2__Scene3_8cpp" startline="964" endline="1027">Sp2_Scene3::RenderSir</referencedby>
        <referencedby refid="classSp2__SpaceRace_1aca0d05de9acd52fc9ecf95d2f4438271" compoundref="Sp2__SpaceRace_8cpp" startline="517" endline="577">Sp2_SpaceRace::RenderSkybox</referencedby>
        <referencedby refid="classSp2__Scene3_1a9a9c699d70d2758a642716104614c8e9" compoundref="SP2__Scene3_8cpp" startline="727" endline="788">Sp2_Scene3::RenderSkybox</referencedby>
        <referencedby refid="classSp2__Scene3_1ab8b8ee5ac95441f935c1b4d04c3a39c2" compoundref="SP2__Scene3_8cpp" startline="815" endline="871">Sp2_Scene3::RenderSuit</referencedby>
        <referencedby refid="classSp2__Scene1_1a600d17005d897d460e53c972a7f82307" compoundref="Sp2__Scene1_8cpp" startline="500" endline="517">Sp2_Scene1::RenderTeleporter</referencedby>
        <referencedby refid="classSp2__SpaceRace_1a8dae59c02fa2996a5a7793fbea6b08e7" compoundref="Sp2__SpaceRace_8cpp" startline="735" endline="752">Sp2_SpaceRace::RenderTeleporter</referencedby>
        <referencedby refid="classSp2__Scene3_1a52aad13df08c4bddb02bbc4469e0bab7" compoundref="SP2__Scene3_8cpp" startline="1425" endline="1442">Sp2_Scene3::RenderTeleporter</referencedby>
        <referencedby refid="classSp2__SpaceRace_1a862b9d074a5549aaa63c2f2e27425568" compoundref="Sp2__SpaceRace_8cpp" startline="859" endline="921">Sp2_SpaceRace::Rendertps</referencedby>
        <referencedby refid="structVector3_1a9c25d604bd52b162cfcb56302ef032bb" compoundref="Vector3_8cpp" startline="67" endline="72">Set</referencedby>
        <referencedby refid="classMtx44_1a7c3d2d30d9ed5bfca2ba97d0e570930f" compoundref="Mtx44_8cpp" startline="433" endline="450">Mtx44::SetToLookAt</referencedby>
        <referencedby refid="structVector3_1ac6c9b941ccefd7744eace77ceab16b56" compoundref="Vector3_8cpp" startline="79" endline="82">SetZero</referencedby>
        <referencedby refid="classCamera3_1a00fd1ad6f418951e6d4c303e0b7e7fb0" compoundref="Camera3_8cpp" startline="180" endline="190">Camera3::tpsUpdate</referencedby>
        <referencedby refid="classCameraTPS_1a187145d973095406211ad23707ef7587" compoundref="CameraTPS_8cpp" startline="35" endline="68">CameraTPS::tpsUpdateRotation</referencedby>
        <referencedby refid="classCameraTPS_1a743d5fc45867e31a8915e47173d0fcb2" compoundref="CameraTPS_8cpp" startline="70" endline="114">CameraTPS::tpsUpdateVec</referencedby>
        <referencedby refid="classCamera3_1acc5d4103826cda6d20b80a0d35eacdbe" compoundref="Camera3_8cpp" startline="72" endline="145">Camera3::Update</referencedby>
        <referencedby refid="classSp2__Scene1_1a7a90c62382a446cff0906a7735cbf0e8" compoundref="Sp2__Scene1_8cpp" startline="273" endline="369">Sp2_Scene1::Update</referencedby>
        <referencedby refid="classSp2__Scene3_1a14c1432b47104cfefa352b501a6330eb" compoundref="SP2__Scene3_8cpp" startline="412" endline="672">Sp2_Scene3::Update</referencedby>
        <referencedby refid="classSpaceVehicles_1a71e4baf5499200c69950e56e08068ae5" compoundref="SpaceVehicles_8cpp" startline="375" endline="438">SpaceVehicles::updateCPUVehicle</referencedby>
        <referencedby refid="classCamera3_1a330a151d28c57c8a86d9848a26866028" compoundref="Camera3_8cpp" startline="38" endline="70">Camera3::updateRotation</referencedby>
        <referencedby refid="classCamera3_1a25d7bcc35e69ec8e097bae4a6aeb11c4" compoundref="Camera3_8cpp" startline="147" endline="178">Camera3::updateRotationTps</referencedby>
        <referencedby refid="classSpaceVehicles_1ac9b59d2bd00fd58786be266e4e6fe237" compoundref="SpaceVehicles_8cpp" startline="29" endline="111">SpaceVehicles::updateVehicle</referencedby>
        <referencedby refid="classSpaceVehicles_1aacce2932520488a8850d6c5640960e50" compoundref="SpaceVehicles_8cpp" startline="236" endline="354">SpaceVehicles::updateVehicle2</referencedby>
        <referencedby refid="Map_8h_1abb21e73deb56ceccf5d5908e806df63e" compoundref="Map_8cpp" startline="55" endline="60">vectorToIndex</referencedby>
      </memberdef>
      <memberdef kind="variable" id="structVector3_1a86eb35a9fa2d5a49e7fad66a35fa9c13" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float Vector3::y</definition>
        <argsstring></argsstring>
        <name>y</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Common Library/Source/Vector3.h" line="27" column="1" bodyfile="Common Library/Source/Vector3.h" bodystart="27" bodyend="-1"/>
        <referencedby refid="classPlatform_1aa071b4d0dce24b61d13efcaede5962de" compoundref="Platform_8cpp" startline="94" endline="105">Platform::changePlatform</referencedby>
        <referencedby refid="Collision_8h_1a4b9eee107300119860880f48b79da32f" compoundref="Collision_8cpp" startline="3" endline="35">collision</referencedby>
        <referencedby refid="Collision_8h_1a9eed1fd9a880ab57e22efb89aa7696de" compoundref="Collision_8cpp" startline="121" endline="135">collisionElimination</referencedby>
        <referencedby refid="Collision_8h_1a5ced462f9fcc3c9963cdf5e0da071631" compoundref="Collision_8cpp" startline="42" endline="66">collisionXZ</referencedby>
        <referencedby refid="structVector3_1aa1cdc5357009b47fe585ddd61e263aad" compoundref="Vector3_8cpp" startline="319" endline="322">Cross</referencedby>
        <referencedby refid="structVector3_1a71b1271deb064c65f9dc7dba638c5b57" compoundref="Vector3_8cpp" startline="303" endline="306">Dot</referencedby>
        <referencedby refid="classCameraTPS_1a3394f9c1704b0b93c07c9e1dc16108ff" compoundref="CameraTPS_8cpp" startline="14" endline="33">CameraTPS::Init</referencedby>
        <referencedby refid="classCamera3_1a6b57f6672752e8c5dbcfa32d693c17fc" compoundref="Camera3_8cpp" startline="16" endline="36">Camera3::Init</referencedby>
        <referencedby refid="structVector3_1affeb6d657b146584b5cb0b42a0d6eaeb" compoundref="Vector3_8cpp" startline="91" endline="94">IsZero</referencedby>
        <referencedby refid="structVector3_1a200024a8442329de9a625ed58ffe7075" compoundref="Vector3_8cpp" startline="273" endline="276">Length</referencedby>
        <referencedby refid="structVector3_1a87c90f81b4044393fe18f7a1e90f26df" compoundref="Vector3_8cpp" startline="287" endline="290">LengthSquared</referencedby>
        <referencedby refid="LoadOBJ_8h_1aa634e9cac0a72d751731db6b4479cbda" compoundref="LoadOBJ_8cpp" startline="8" endline="116">LoadOBJ</referencedby>
        <referencedby refid="classPlayer_1a5b057a6cd421a056d2a0694ab00739e7" compoundref="Player_8cpp" startline="48" endline="174">Player::movementUpdate</referencedby>
        <referencedby refid="structVector3_1aaef4f25a38878a640ab4a48002a7eff8" compoundref="Vector3_8cpp" startline="358" endline="367">Normalize</referencedby>
        <referencedby refid="structVector3_1a2da0f00c5529bced69763320dac9c414" compoundref="Vector3_8cpp" startline="337" endline="343">Normalized</referencedby>
        <referencedby refid="structVector3_1a27ba9abc0d1b5cd47a0365a4ebcfeb7c" compoundref="Vector3_8cpp" startline="241" endline="244">operator!=</referencedby>
        <referencedby refid="classMtx44_1a20fe7d5d35374ea122848a8778de25e6" compoundref="Mtx44_8cpp" startline="294" endline="300">Mtx44::operator*</referencedby>
        <referencedby refid="structVector3_1ab8bb1a236776d951a2e43b3ca9448bb2" compoundref="Vector3_8cpp" startline="189" endline="192">operator*</referencedby>
        <referencedby refid="structVector3_1ab337fe4b0c5fd44657f42427e265c982" compoundref="Vector3_8cpp" startline="205" endline="211">operator*=</referencedby>
        <referencedby refid="structVector3_1a90c345c2a67d220a474a6f209102634d" compoundref="Vector3_8cpp" startline="107" endline="110">operator+</referencedby>
        <referencedby refid="structVector3_1a339c80afd026abb2e35a4ae88301928b" compoundref="Vector3_8cpp" startline="123" endline="129">operator+=</referencedby>
        <referencedby refid="structVector3_1a224d913ac29766a57a5d7c96eb226b92" compoundref="Vector3_8cpp" startline="141" endline="144">operator-</referencedby>
        <referencedby refid="structVector3_1af0c657bdd493fcece630dc985a8e7378" compoundref="Vector3_8cpp" startline="157" endline="163">operator-=</referencedby>
        <referencedby refid="Vector3_8cpp_1a2bb22d81325ba847b6c54c8ad769b5d1" compoundref="Vector3_8cpp" startline="369" endline="373">operator&lt;&lt;</referencedby>
        <referencedby refid="structVector3_1afbfdb69cef54e84d72d05c3c141e315f" compoundref="Vector3_8cpp" startline="256" endline="262">operator=</referencedby>
        <referencedby refid="structVector3_1ae084cfb19c537457f52bfb3cb3a7054d" compoundref="Vector3_8cpp" startline="225" endline="228">operator==</referencedby>
        <referencedby refid="classLoadingScene_1a20d69f97ec73d55519a3481f32dd804b" compoundref="LoadingScene_8cpp" startline="335" endline="364">LoadingScene::Render</referencedby>
        <referencedby refid="classSp2__Scene1_1a5d45996751484538f8f7675a1db98979" compoundref="Sp2__Scene1_8cpp" startline="741" endline="786">Sp2_Scene1::Render</referencedby>
        <referencedby refid="classSp2__Scene3_1a2227ee0830c9d5f4ca486cc70b140331" compoundref="SP2__Scene3_8cpp" startline="1527" endline="1581">Sp2_Scene3::Render</referencedby>
        <referencedby refid="classSp2__SpaceRace_1a6e5a16911da0317ddce3175936fb316d" compoundref="Sp2__SpaceRace_8cpp" startline="923" endline="1010">Sp2_SpaceRace::Render</referencedby>
        <referencedby refid="classSp2__Scene1_1affd071d43ef2fca91b096e7e7963f7d1" compoundref="Sp2__Scene1_8cpp" startline="537" endline="560">Sp2_Scene1::RenderBB8</referencedby>
        <referencedby refid="classSp2__Scene3_1ae73b4bf302e532be99afd20b64af68c9" compoundref="SP2__Scene3_8cpp" startline="919" endline="962">Sp2_Scene3::RenderBB8v2</referencedby>
        <referencedby refid="classSp2__Scene3_1aaf2c3e791d4ccba1e3b1e76d9df0d9bb" compoundref="SP2__Scene3_8cpp" startline="1251" endline="1267">Sp2_Scene3::RenderChestBurster</referencedby>
        <referencedby refid="classSp2__Scene3_1aee8c1d7c9bd31063ba0f0a0f8c0eb10f" compoundref="SP2__Scene3_8cpp" startline="1269" endline="1285">Sp2_Scene3::RenderChestBurster1</referencedby>
        <referencedby refid="classSp2__Scene1_1ad6a43af14f5aca3417deea62b24dbc7e" compoundref="Sp2__Scene1_8cpp" startline="672" endline="733">Sp2_Scene1::Renderfps</referencedby>
        <referencedby refid="classSp2__SpaceRace_1afe1631510dcb1ed61a327ce0e3787745" compoundref="Sp2__SpaceRace_8cpp" startline="754" endline="857">Sp2_SpaceRace::Renderfps</referencedby>
        <referencedby refid="classSp2__Scene1_1aeabebe615a8a759a67df19a5d622f666" compoundref="Sp2__Scene1_8cpp" startline="477" endline="498">Sp2_Scene1::RenderGameObj</referencedby>
        <referencedby refid="classSp2__SpaceRace_1a21eaef4ef696d83ad357ee8c0ec4bb16" compoundref="Sp2__SpaceRace_8cpp" startline="580" endline="603">Sp2_SpaceRace::RenderGameObj</referencedby>
        <referencedby refid="classSp2__Scene3_1a57f6c020216c4093a312595a01d3e35e" compoundref="SP2__Scene3_8cpp" startline="873" endline="899">Sp2_Scene3::RenderGameObj</referencedby>
        <referencedby refid="classSp2__Scene3_1af977943490d876a299b08644b5f0ebcd" compoundref="SP2__Scene3_8cpp" startline="1176" endline="1247">Sp2_Scene3::RenderMedic</referencedby>
        <referencedby refid="classLoadingScene_1ac183e240781b77c43cdf4c490f5358e8" compoundref="LoadingScene_8cpp" startline="287" endline="309">LoadingScene::RenderMeshOnScreen</referencedby>
        <referencedby refid="classSp2__Scene1_1aebb431e1bbb2f71c0a18c01c47cd2f8d" compoundref="Sp2__Scene1_8cpp" startline="647" endline="669">Sp2_Scene1::RenderMeshOnScreen</referencedby>
        <referencedby refid="classSp2__SpaceRace_1ab0f4ca726823858a22af078333c90c8b" compoundref="Sp2__SpaceRace_8cpp" startline="711" endline="733">Sp2_SpaceRace::RenderMeshOnScreen</referencedby>
        <referencedby refid="classSp2__Scene3_1a47e7097fa3f498d2496cffad65ef2539" compoundref="SP2__Scene3_8cpp" startline="1400" endline="1422">Sp2_Scene3::RenderMeshOnScreen</referencedby>
        <referencedby refid="classSp2__Scene3_1a485e611aa8f811d187cbf0f444ae8704" compoundref="SP2__Scene3_8cpp" startline="1287" endline="1302">Sp2_Scene3::RenderNecromancer</referencedby>
        <referencedby refid="classSp2__Scene3_1aa9b81af61da8677203bf3e15f8526d15" compoundref="SP2__Scene3_8cpp" startline="1039" endline="1174">Sp2_Scene3::RenderPlatform</referencedby>
        <referencedby refid="classSp2__Scene3_1ac03a8ab64a3e0fbd62ae9cda9ef2daa4" compoundref="SP2__Scene3_8cpp" startline="1304" endline="1313">Sp2_Scene3::RenderRocket</referencedby>
        <referencedby refid="classSp2__Scene3_1a001ac341d244cfd9b1c0acb45c973263" compoundref="SP2__Scene3_8cpp" startline="964" endline="1027">Sp2_Scene3::RenderSir</referencedby>
        <referencedby refid="classSp2__Scene3_1ab8b8ee5ac95441f935c1b4d04c3a39c2" compoundref="SP2__Scene3_8cpp" startline="815" endline="871">Sp2_Scene3::RenderSuit</referencedby>
        <referencedby refid="classSp2__Scene1_1a600d17005d897d460e53c972a7f82307" compoundref="Sp2__Scene1_8cpp" startline="500" endline="517">Sp2_Scene1::RenderTeleporter</referencedby>
        <referencedby refid="classSp2__SpaceRace_1a8dae59c02fa2996a5a7793fbea6b08e7" compoundref="Sp2__SpaceRace_8cpp" startline="735" endline="752">Sp2_SpaceRace::RenderTeleporter</referencedby>
        <referencedby refid="classSp2__Scene3_1a52aad13df08c4bddb02bbc4469e0bab7" compoundref="SP2__Scene3_8cpp" startline="1425" endline="1442">Sp2_Scene3::RenderTeleporter</referencedby>
        <referencedby refid="structVector3_1a9c25d604bd52b162cfcb56302ef032bb" compoundref="Vector3_8cpp" startline="67" endline="72">Set</referencedby>
        <referencedby refid="classMtx44_1a7c3d2d30d9ed5bfca2ba97d0e570930f" compoundref="Mtx44_8cpp" startline="433" endline="450">Mtx44::SetToLookAt</referencedby>
        <referencedby refid="structVector3_1ac6c9b941ccefd7744eace77ceab16b56" compoundref="Vector3_8cpp" startline="79" endline="82">SetZero</referencedby>
        <referencedby refid="classCamera3_1a00fd1ad6f418951e6d4c303e0b7e7fb0" compoundref="Camera3_8cpp" startline="180" endline="190">Camera3::tpsUpdate</referencedby>
        <referencedby refid="classCameraTPS_1a187145d973095406211ad23707ef7587" compoundref="CameraTPS_8cpp" startline="35" endline="68">CameraTPS::tpsUpdateRotation</referencedby>
        <referencedby refid="classCameraTPS_1a743d5fc45867e31a8915e47173d0fcb2" compoundref="CameraTPS_8cpp" startline="70" endline="114">CameraTPS::tpsUpdateVec</referencedby>
        <referencedby refid="classCamera3_1acc5d4103826cda6d20b80a0d35eacdbe" compoundref="Camera3_8cpp" startline="72" endline="145">Camera3::Update</referencedby>
        <referencedby refid="classSp2__Scene3_1a14c1432b47104cfefa352b501a6330eb" compoundref="SP2__Scene3_8cpp" startline="412" endline="672">Sp2_Scene3::Update</referencedby>
        <referencedby refid="classCamera3_1a330a151d28c57c8a86d9848a26866028" compoundref="Camera3_8cpp" startline="38" endline="70">Camera3::updateRotation</referencedby>
      </memberdef>
      <memberdef kind="variable" id="structVector3_1aa8c9461eb24bd2c364258078811a3e9d" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float Vector3::z</definition>
        <argsstring></argsstring>
        <name>z</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Common Library/Source/Vector3.h" line="27" column="1" bodyfile="Common Library/Source/Vector3.h" bodystart="27" bodyend="-1"/>
        <referencedby refid="Collision_8h_1a4b9eee107300119860880f48b79da32f" compoundref="Collision_8cpp" startline="3" endline="35">collision</referencedby>
        <referencedby refid="Collision_8h_1a5ced462f9fcc3c9963cdf5e0da071631" compoundref="Collision_8cpp" startline="42" endline="66">collisionXZ</referencedby>
        <referencedby refid="structVector3_1aa1cdc5357009b47fe585ddd61e263aad" compoundref="Vector3_8cpp" startline="319" endline="322">Cross</referencedby>
        <referencedby refid="structVector3_1a71b1271deb064c65f9dc7dba638c5b57" compoundref="Vector3_8cpp" startline="303" endline="306">Dot</referencedby>
        <referencedby refid="structVector3_1affeb6d657b146584b5cb0b42a0d6eaeb" compoundref="Vector3_8cpp" startline="91" endline="94">IsZero</referencedby>
        <referencedby refid="structVector3_1a200024a8442329de9a625ed58ffe7075" compoundref="Vector3_8cpp" startline="273" endline="276">Length</referencedby>
        <referencedby refid="structVector3_1a87c90f81b4044393fe18f7a1e90f26df" compoundref="Vector3_8cpp" startline="287" endline="290">LengthSquared</referencedby>
        <referencedby refid="LoadOBJ_8h_1aa634e9cac0a72d751731db6b4479cbda" compoundref="LoadOBJ_8cpp" startline="8" endline="116">LoadOBJ</referencedby>
        <referencedby refid="classBB8_1aab6c34b90dab5887f0563060a20838e4" compoundref="BB-8_8cpp" startline="62" endline="67">BB8::move</referencedby>
        <referencedby refid="classBB8v2_1a4d48f1032bb60950982b908efeb3ca95" compoundref="BB-8__2_8cpp" startline="62" endline="67">BB8v2::move</referencedby>
        <referencedby refid="classPlatform_1a486c573852bfdb54819927a5870556d3" compoundref="Platform_8cpp" startline="61" endline="66">Platform::move</referencedby>
        <referencedby refid="classPlayer_1a5b057a6cd421a056d2a0694ab00739e7" compoundref="Player_8cpp" startline="48" endline="174">Player::movementUpdate</referencedby>
        <referencedby refid="structVector3_1aaef4f25a38878a640ab4a48002a7eff8" compoundref="Vector3_8cpp" startline="358" endline="367">Normalize</referencedby>
        <referencedby refid="structVector3_1a2da0f00c5529bced69763320dac9c414" compoundref="Vector3_8cpp" startline="337" endline="343">Normalized</referencedby>
        <referencedby refid="structVector3_1a27ba9abc0d1b5cd47a0365a4ebcfeb7c" compoundref="Vector3_8cpp" startline="241" endline="244">operator!=</referencedby>
        <referencedby refid="classMtx44_1a20fe7d5d35374ea122848a8778de25e6" compoundref="Mtx44_8cpp" startline="294" endline="300">Mtx44::operator*</referencedby>
        <referencedby refid="structVector3_1ab8bb1a236776d951a2e43b3ca9448bb2" compoundref="Vector3_8cpp" startline="189" endline="192">operator*</referencedby>
        <referencedby refid="structVector3_1ab337fe4b0c5fd44657f42427e265c982" compoundref="Vector3_8cpp" startline="205" endline="211">operator*=</referencedby>
        <referencedby refid="structVector3_1a90c345c2a67d220a474a6f209102634d" compoundref="Vector3_8cpp" startline="107" endline="110">operator+</referencedby>
        <referencedby refid="structVector3_1a339c80afd026abb2e35a4ae88301928b" compoundref="Vector3_8cpp" startline="123" endline="129">operator+=</referencedby>
        <referencedby refid="structVector3_1a224d913ac29766a57a5d7c96eb226b92" compoundref="Vector3_8cpp" startline="141" endline="144">operator-</referencedby>
        <referencedby refid="structVector3_1af0c657bdd493fcece630dc985a8e7378" compoundref="Vector3_8cpp" startline="157" endline="163">operator-=</referencedby>
        <referencedby refid="Vector3_8cpp_1a2bb22d81325ba847b6c54c8ad769b5d1" compoundref="Vector3_8cpp" startline="369" endline="373">operator&lt;&lt;</referencedby>
        <referencedby refid="structVector3_1afbfdb69cef54e84d72d05c3c141e315f" compoundref="Vector3_8cpp" startline="256" endline="262">operator=</referencedby>
        <referencedby refid="structVector3_1ae084cfb19c537457f52bfb3cb3a7054d" compoundref="Vector3_8cpp" startline="225" endline="228">operator==</referencedby>
        <referencedby refid="classLoadingScene_1a20d69f97ec73d55519a3481f32dd804b" compoundref="LoadingScene_8cpp" startline="335" endline="364">LoadingScene::Render</referencedby>
        <referencedby refid="classSp2__Scene1_1a5d45996751484538f8f7675a1db98979" compoundref="Sp2__Scene1_8cpp" startline="741" endline="786">Sp2_Scene1::Render</referencedby>
        <referencedby refid="classSp2__Scene3_1a2227ee0830c9d5f4ca486cc70b140331" compoundref="SP2__Scene3_8cpp" startline="1527" endline="1581">Sp2_Scene3::Render</referencedby>
        <referencedby refid="classSp2__SpaceRace_1a6e5a16911da0317ddce3175936fb316d" compoundref="Sp2__SpaceRace_8cpp" startline="923" endline="1010">Sp2_SpaceRace::Render</referencedby>
        <referencedby refid="classSp2__Scene1_1affd071d43ef2fca91b096e7e7963f7d1" compoundref="Sp2__Scene1_8cpp" startline="537" endline="560">Sp2_Scene1::RenderBB8</referencedby>
        <referencedby refid="classSp2__Scene3_1ae73b4bf302e532be99afd20b64af68c9" compoundref="SP2__Scene3_8cpp" startline="919" endline="962">Sp2_Scene3::RenderBB8v2</referencedby>
        <referencedby refid="classSp2__Scene3_1aaf2c3e791d4ccba1e3b1e76d9df0d9bb" compoundref="SP2__Scene3_8cpp" startline="1251" endline="1267">Sp2_Scene3::RenderChestBurster</referencedby>
        <referencedby refid="classSp2__Scene3_1aee8c1d7c9bd31063ba0f0a0f8c0eb10f" compoundref="SP2__Scene3_8cpp" startline="1269" endline="1285">Sp2_Scene3::RenderChestBurster1</referencedby>
        <referencedby refid="classSp2__Scene1_1ad6a43af14f5aca3417deea62b24dbc7e" compoundref="Sp2__Scene1_8cpp" startline="672" endline="733">Sp2_Scene1::Renderfps</referencedby>
        <referencedby refid="classSp2__SpaceRace_1afe1631510dcb1ed61a327ce0e3787745" compoundref="Sp2__SpaceRace_8cpp" startline="754" endline="857">Sp2_SpaceRace::Renderfps</referencedby>
        <referencedby refid="classSp2__Scene1_1aeabebe615a8a759a67df19a5d622f666" compoundref="Sp2__Scene1_8cpp" startline="477" endline="498">Sp2_Scene1::RenderGameObj</referencedby>
        <referencedby refid="classSp2__SpaceRace_1a21eaef4ef696d83ad357ee8c0ec4bb16" compoundref="Sp2__SpaceRace_8cpp" startline="580" endline="603">Sp2_SpaceRace::RenderGameObj</referencedby>
        <referencedby refid="classSp2__Scene3_1a57f6c020216c4093a312595a01d3e35e" compoundref="SP2__Scene3_8cpp" startline="873" endline="899">Sp2_Scene3::RenderGameObj</referencedby>
        <referencedby refid="classSp2__Scene3_1af977943490d876a299b08644b5f0ebcd" compoundref="SP2__Scene3_8cpp" startline="1176" endline="1247">Sp2_Scene3::RenderMedic</referencedby>
        <referencedby refid="classLoadingScene_1ac183e240781b77c43cdf4c490f5358e8" compoundref="LoadingScene_8cpp" startline="287" endline="309">LoadingScene::RenderMeshOnScreen</referencedby>
        <referencedby refid="classSp2__Scene1_1aebb431e1bbb2f71c0a18c01c47cd2f8d" compoundref="Sp2__Scene1_8cpp" startline="647" endline="669">Sp2_Scene1::RenderMeshOnScreen</referencedby>
        <referencedby refid="classSp2__SpaceRace_1ab0f4ca726823858a22af078333c90c8b" compoundref="Sp2__SpaceRace_8cpp" startline="711" endline="733">Sp2_SpaceRace::RenderMeshOnScreen</referencedby>
        <referencedby refid="classSp2__Scene3_1a47e7097fa3f498d2496cffad65ef2539" compoundref="SP2__Scene3_8cpp" startline="1400" endline="1422">Sp2_Scene3::RenderMeshOnScreen</referencedby>
        <referencedby refid="classSp2__Scene3_1a485e611aa8f811d187cbf0f444ae8704" compoundref="SP2__Scene3_8cpp" startline="1287" endline="1302">Sp2_Scene3::RenderNecromancer</referencedby>
        <referencedby refid="classSp2__Scene3_1aa9b81af61da8677203bf3e15f8526d15" compoundref="SP2__Scene3_8cpp" startline="1039" endline="1174">Sp2_Scene3::RenderPlatform</referencedby>
        <referencedby refid="classSp2__Scene3_1ac03a8ab64a3e0fbd62ae9cda9ef2daa4" compoundref="SP2__Scene3_8cpp" startline="1304" endline="1313">Sp2_Scene3::RenderRocket</referencedby>
        <referencedby refid="classSp2__Scene3_1a001ac341d244cfd9b1c0acb45c973263" compoundref="SP2__Scene3_8cpp" startline="964" endline="1027">Sp2_Scene3::RenderSir</referencedby>
        <referencedby refid="classSp2__SpaceRace_1aca0d05de9acd52fc9ecf95d2f4438271" compoundref="Sp2__SpaceRace_8cpp" startline="517" endline="577">Sp2_SpaceRace::RenderSkybox</referencedby>
        <referencedby refid="classSp2__Scene3_1a9a9c699d70d2758a642716104614c8e9" compoundref="SP2__Scene3_8cpp" startline="727" endline="788">Sp2_Scene3::RenderSkybox</referencedby>
        <referencedby refid="classSp2__Scene3_1ab8b8ee5ac95441f935c1b4d04c3a39c2" compoundref="SP2__Scene3_8cpp" startline="815" endline="871">Sp2_Scene3::RenderSuit</referencedby>
        <referencedby refid="classSp2__Scene1_1a600d17005d897d460e53c972a7f82307" compoundref="Sp2__Scene1_8cpp" startline="500" endline="517">Sp2_Scene1::RenderTeleporter</referencedby>
        <referencedby refid="classSp2__SpaceRace_1a8dae59c02fa2996a5a7793fbea6b08e7" compoundref="Sp2__SpaceRace_8cpp" startline="735" endline="752">Sp2_SpaceRace::RenderTeleporter</referencedby>
        <referencedby refid="classSp2__Scene3_1a52aad13df08c4bddb02bbc4469e0bab7" compoundref="SP2__Scene3_8cpp" startline="1425" endline="1442">Sp2_Scene3::RenderTeleporter</referencedby>
        <referencedby refid="structVector3_1a9c25d604bd52b162cfcb56302ef032bb" compoundref="Vector3_8cpp" startline="67" endline="72">Set</referencedby>
        <referencedby refid="classMtx44_1a7c3d2d30d9ed5bfca2ba97d0e570930f" compoundref="Mtx44_8cpp" startline="433" endline="450">Mtx44::SetToLookAt</referencedby>
        <referencedby refid="structVector3_1ac6c9b941ccefd7744eace77ceab16b56" compoundref="Vector3_8cpp" startline="79" endline="82">SetZero</referencedby>
        <referencedby refid="classCamera3_1a00fd1ad6f418951e6d4c303e0b7e7fb0" compoundref="Camera3_8cpp" startline="180" endline="190">Camera3::tpsUpdate</referencedby>
        <referencedby refid="classCameraTPS_1a187145d973095406211ad23707ef7587" compoundref="CameraTPS_8cpp" startline="35" endline="68">CameraTPS::tpsUpdateRotation</referencedby>
        <referencedby refid="classCameraTPS_1a743d5fc45867e31a8915e47173d0fcb2" compoundref="CameraTPS_8cpp" startline="70" endline="114">CameraTPS::tpsUpdateVec</referencedby>
        <referencedby refid="classCamera3_1acc5d4103826cda6d20b80a0d35eacdbe" compoundref="Camera3_8cpp" startline="72" endline="145">Camera3::Update</referencedby>
        <referencedby refid="classSpaceVehicles_1a71e4baf5499200c69950e56e08068ae5" compoundref="SpaceVehicles_8cpp" startline="375" endline="438">SpaceVehicles::updateCPUVehicle</referencedby>
        <referencedby refid="classCamera3_1a330a151d28c57c8a86d9848a26866028" compoundref="Camera3_8cpp" startline="38" endline="70">Camera3::updateRotation</referencedby>
        <referencedby refid="classCamera3_1a25d7bcc35e69ec8e097bae4a6aeb11c4" compoundref="Camera3_8cpp" startline="147" endline="178">Camera3::updateRotationTps</referencedby>
        <referencedby refid="classSpaceVehicles_1ac9b59d2bd00fd58786be266e4e6fe237" compoundref="SpaceVehicles_8cpp" startline="29" endline="111">SpaceVehicles::updateVehicle</referencedby>
        <referencedby refid="classSpaceVehicles_1aacce2932520488a8850d6c5640960e50" compoundref="SpaceVehicles_8cpp" startline="236" endline="354">SpaceVehicles::updateVehicle2</referencedby>
        <referencedby refid="Map_8h_1abb21e73deb56ceccf5d5908e806df63e" compoundref="Map_8cpp" startline="55" endline="60">vectorToIndex</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structVector3_1abdc9a7f223e3628ed1cbccd107d49c44" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Vector3::IsEqual</definition>
        <argsstring>(float a, float b) const </argsstring>
        <name>IsEqual</name>
        <param>
          <type>float</type>
          <declname>a</declname>
        </param>
        <param>
          <type>float</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Common Library/Source/Vector3.h" line="28" column="1" bodyfile="Common Library/Source/Vector3.cpp" bodystart="13" bodyend="16"/>
        <references refid="namespaceMath_1a5ee876d5cb049f0b3b71f3c54ed8efa0" compoundref="MyMath_8h" startline="27">Math::EPSILON</references>
        <referencedby refid="structVector3_1affeb6d657b146584b5cb0b42a0d6eaeb" compoundref="Vector3_8cpp" startline="91" endline="94">IsZero</referencedby>
        <referencedby refid="structVector3_1a27ba9abc0d1b5cd47a0365a4ebcfeb7c" compoundref="Vector3_8cpp" startline="241" endline="244">operator!=</referencedby>
        <referencedby refid="structVector3_1ae084cfb19c537457f52bfb3cb3a7054d" compoundref="Vector3_8cpp" startline="225" endline="228">operator==</referencedby>
      </memberdef>
      <memberdef kind="function" id="structVector3_1afa5e0c801fc2c8a820a54ea99302fe08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Vector3::Vector3</definition>
        <argsstring>(float a=0.0, float b=0.0, float c=0.0)</argsstring>
        <name>Vector3</name>
        <param>
          <type>float</type>
          <declname>a</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>float</type>
          <declname>b</declname>
          <defval>0.0</defval>
        </param>
        <param>
          <type>float</type>
          <declname>c</declname>
          <defval>0.0</defval>
        </param>
        <briefdescription>
<para><ref refid="structVector3" kindref="compound">Vector3</ref> default constructor. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>x value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>y value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>z value </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Common Library/Source/Vector3.h" line="30" column="1" bodyfile="Common Library/Source/Vector3.cpp" bodystart="30" bodyend="32"/>
        <referencedby refid="structVector3_1aa1cdc5357009b47fe585ddd61e263aad" compoundref="Vector3_8cpp" startline="319" endline="322">Cross</referencedby>
        <referencedby refid="structVector3_1a2da0f00c5529bced69763320dac9c414" compoundref="Vector3_8cpp" startline="337" endline="343">Normalized</referencedby>
        <referencedby refid="structVector3_1ab8bb1a236776d951a2e43b3ca9448bb2" compoundref="Vector3_8cpp" startline="189" endline="192">operator*</referencedby>
        <referencedby refid="structVector3_1a90c345c2a67d220a474a6f209102634d" compoundref="Vector3_8cpp" startline="107" endline="110">operator+</referencedby>
        <referencedby refid="structVector3_1a224d913ac29766a57a5d7c96eb226b92" compoundref="Vector3_8cpp" startline="141" endline="144">operator-</referencedby>
      </memberdef>
      <memberdef kind="function" id="structVector3_1ae1d084ff898241c341e322fba12ceed7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Vector3::Vector3</definition>
        <argsstring>(const Vector3 &amp;rhs)</argsstring>
        <name>Vector3</name>
        <param>
          <type>const <ref refid="structVector3" kindref="compound">Vector3</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para><ref refid="structVector3" kindref="compound">Vector3</ref> copy constructor. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector to copy from </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Common Library/Source/Vector3.h" line="31" column="1" bodyfile="Common Library/Source/Vector3.cpp" bodystart="42" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="structVector3_1a5545e13e2e2861ece8f14b12a6a8101f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Vector3::~Vector3</definition>
        <argsstring>()</argsstring>
        <name>~Vector3</name>
        <briefdescription>
<para><ref refid="structVector3" kindref="compound">Vector3</ref> destructor. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Common Library/Source/Vector3.h" line="32" column="1" bodyfile="Common Library/Source/Vector3.cpp" bodystart="51" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="structVector3_1a9c25d604bd52b162cfcb56302ef032bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Vector3::Set</definition>
        <argsstring>(float a=0, float b=0, float c=0)</argsstring>
        <name>Set</name>
        <param>
          <type>float</type>
          <declname>a</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>float</type>
          <declname>b</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>float</type>
          <declname>c</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Set the elements of this vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>x value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>y value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>z value </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Common Library/Source/Vector3.h" line="34" column="1" bodyfile="Common Library/Source/Vector3.cpp" bodystart="67" bodyend="72"/>
        <references refid="structVector3_1a7e2d3237b29a2f29d7b3d8b2934e35f2" compoundref="Vector3_8h" startline="27">x</references>
        <references refid="structVector3_1a86eb35a9fa2d5a49e7fad66a35fa9c13" compoundref="Vector3_8h" startline="27">y</references>
        <references refid="structVector3_1aa8c9461eb24bd2c364258078811a3e9d" compoundref="Vector3_8h" startline="27">z</references>
        <referencedby refid="classMeshBuilder_1a78d37e2b0cc068eec801f17c367100e7" compoundref="MeshBuilder_8cpp" startline="18" endline="49">MeshBuilder::GenerateAxes</referencedby>
        <referencedby refid="classMeshBuilder_1af82a06baa71bcd1ef4a238161cf3325b" compoundref="MeshBuilder_8cpp" startline="185" endline="221">MeshBuilder::GenerateCircle</referencedby>
        <referencedby refid="classMeshBuilder_1ad8f4a3a18fca28e77c82ee30934a5995" compoundref="MeshBuilder_8cpp" startline="495" endline="535">MeshBuilder::GenerateCircleLine</referencedby>
        <referencedby refid="classMeshBuilder_1a5e777328dc946f483beb5645d8f24c4a" compoundref="MeshBuilder_8cpp" startline="109" endline="173">MeshBuilder::GenerateCube</referencedby>
        <referencedby refid="classMeshBuilder_1a7848e12e80faf05fe525dca860bc5e13" compoundref="MeshBuilder_8cpp" startline="321" endline="382">MeshBuilder::GenerateCylinder</referencedby>
        <referencedby refid="classMeshBuilder_1adac1ad1856500e8d5efdb8d576bfbc0d" compoundref="MeshBuilder_8cpp" startline="537" endline="577">MeshBuilder::GenerateHalfCircleLine</referencedby>
        <referencedby refid="classMeshBuilder_1a3bfcd731fed289415ea3252195f6e267" compoundref="MeshBuilder_8cpp" startline="427" endline="493">MeshBuilder::GenerateHemiSphere</referencedby>
        <referencedby refid="classMeshBuilder_1a8fede2f411aebe5d41af99b51be7ed77" compoundref="MeshBuilder_8cpp" startline="64" endline="93">MeshBuilder::GenerateQuad</referencedby>
        <referencedby refid="classMeshBuilder_1a84ad6e09820e72f4f6893862166cf5fd" compoundref="MeshBuilder_8cpp" startline="223" endline="260">MeshBuilder::GenerateRing</referencedby>
        <referencedby refid="classMeshBuilder_1aa0cff3ada5866ad3236dd88b24f64c39" compoundref="MeshBuilder_8cpp" startline="277" endline="319">MeshBuilder::GenerateSphere</referencedby>
        <referencedby refid="classMeshBuilder_1aac7c87881dbc08f8d41f2068e0f40c76" compoundref="MeshBuilder_8cpp" startline="607" endline="646">MeshBuilder::GenerateText</referencedby>
        <referencedby refid="classMeshBuilder_1a27e6a5bc9270e592f31df04fbbc7cf31" compoundref="MeshBuilder_8cpp" startline="384" endline="425">MeshBuilder::GenerateTorus</referencedby>
        <referencedby refid="classSp2__Scene1_1a4704d16ad01dec2a8405dd55800dd84b" compoundref="Sp2__Scene1_8cpp" startline="25" endline="272">Sp2_Scene1::Init</referencedby>
        <referencedby refid="classLoadingScene_1ab58112cfff35f696e5479b5eaf74cbb3" compoundref="LoadingScene_8cpp" startline="24" endline="141">LoadingScene::Init</referencedby>
        <referencedby refid="classSp2__Scene3_1a8f774405ee31eaf42274079a2d0a03ee" compoundref="SP2__Scene3_8cpp" startline="56" endline="404">Sp2_Scene3::Init</referencedby>
        <referencedby refid="classSp2__SpaceRace_1a1837e0004994f2e9f885828b7788da27" compoundref="Sp2__SpaceRace_8cpp" startline="25" endline="240">Sp2_SpaceRace::Init</referencedby>
      </memberdef>
      <memberdef kind="function" id="structVector3_1ac6c9b941ccefd7744eace77ceab16b56" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Vector3::SetZero</definition>
        <argsstring>(void)</argsstring>
        <name>SetZero</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Set all elements to zero. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Common Library/Source/Vector3.h" line="35" column="1" bodyfile="Common Library/Source/Vector3.cpp" bodystart="79" bodyend="82"/>
        <references refid="structVector3_1a7e2d3237b29a2f29d7b3d8b2934e35f2" compoundref="Vector3_8h" startline="27">x</references>
        <references refid="structVector3_1a86eb35a9fa2d5a49e7fad66a35fa9c13" compoundref="Vector3_8h" startline="27">y</references>
        <references refid="structVector3_1aa8c9461eb24bd2c364258078811a3e9d" compoundref="Vector3_8h" startline="27">z</references>
      </memberdef>
      <memberdef kind="function" id="structVector3_1affeb6d657b146584b5cb0b42a0d6eaeb" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Vector3::IsZero</definition>
        <argsstring>(void) const </argsstring>
        <name>IsZero</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Check if vector is zero, using Math::Epsilon. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>TRUE if vector is zero </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Common Library/Source/Vector3.h" line="36" column="1" bodyfile="Common Library/Source/Vector3.cpp" bodystart="91" bodyend="94"/>
        <references refid="structVector3_1abdc9a7f223e3628ed1cbccd107d49c44" compoundref="Vector3_8cpp" startline="13" endline="16">IsEqual</references>
        <references refid="structVector3_1a7e2d3237b29a2f29d7b3d8b2934e35f2" compoundref="Vector3_8h" startline="27">x</references>
        <references refid="structVector3_1a86eb35a9fa2d5a49e7fad66a35fa9c13" compoundref="Vector3_8h" startline="27">y</references>
        <references refid="structVector3_1aa8c9461eb24bd2c364258078811a3e9d" compoundref="Vector3_8h" startline="27">z</references>
      </memberdef>
      <memberdef kind="function" id="structVector3_1a90c345c2a67d220a474a6f209102634d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structVector3" kindref="compound">Vector3</ref></type>
        <definition>Vector3 Vector3::operator+</definition>
        <argsstring>(const Vector3 &amp;rhs) const </argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="structVector3" kindref="compound">Vector3</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>operator+ overload for vector addition </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structVector3" kindref="compound">Vector3</ref> to add with </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Resulting vector </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Common Library/Source/Vector3.h" line="38" column="1" bodyfile="Common Library/Source/Vector3.cpp" bodystart="107" bodyend="110"/>
        <references refid="structVector3_1afa5e0c801fc2c8a820a54ea99302fe08" compoundref="Vector3_8cpp" startline="30" endline="32">Vector3</references>
        <references refid="structVector3_1a7e2d3237b29a2f29d7b3d8b2934e35f2" compoundref="Vector3_8h" startline="27">x</references>
        <references refid="structVector3_1a86eb35a9fa2d5a49e7fad66a35fa9c13" compoundref="Vector3_8h" startline="27">y</references>
        <references refid="structVector3_1aa8c9461eb24bd2c364258078811a3e9d" compoundref="Vector3_8h" startline="27">z</references>
      </memberdef>
      <memberdef kind="function" id="structVector3_1a339c80afd026abb2e35a4ae88301928b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structVector3" kindref="compound">Vector3</ref> &amp;</type>
        <definition>Vector3 &amp; Vector3::operator+=</definition>
        <argsstring>(const Vector3 &amp;rhs)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="structVector3" kindref="compound">Vector3</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>operator+= overload for vector addition and assignment </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structVector3" kindref="compound">Vector3</ref> to add with </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Resulting vector </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Common Library/Source/Vector3.h" line="39" column="1" bodyfile="Common Library/Source/Vector3.cpp" bodystart="123" bodyend="129"/>
        <references refid="structVector3_1a7e2d3237b29a2f29d7b3d8b2934e35f2" compoundref="Vector3_8h" startline="27">x</references>
        <references refid="structVector3_1a86eb35a9fa2d5a49e7fad66a35fa9c13" compoundref="Vector3_8h" startline="27">y</references>
        <references refid="structVector3_1aa8c9461eb24bd2c364258078811a3e9d" compoundref="Vector3_8h" startline="27">z</references>
      </memberdef>
      <memberdef kind="function" id="structVector3_1a224d913ac29766a57a5d7c96eb226b92" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structVector3" kindref="compound">Vector3</ref></type>
        <definition>Vector3 Vector3::operator-</definition>
        <argsstring>(const Vector3 &amp;rhs) const </argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="structVector3" kindref="compound">Vector3</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>operator- overload for vector subtraction </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structVector3" kindref="compound">Vector3</ref> to subtract with </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Resulting vector </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Common Library/Source/Vector3.h" line="41" column="1" bodyfile="Common Library/Source/Vector3.cpp" bodystart="141" bodyend="144"/>
        <references refid="structVector3_1afa5e0c801fc2c8a820a54ea99302fe08" compoundref="Vector3_8cpp" startline="30" endline="32">Vector3</references>
        <references refid="structVector3_1a7e2d3237b29a2f29d7b3d8b2934e35f2" compoundref="Vector3_8h" startline="27">x</references>
        <references refid="structVector3_1a86eb35a9fa2d5a49e7fad66a35fa9c13" compoundref="Vector3_8h" startline="27">y</references>
        <references refid="structVector3_1aa8c9461eb24bd2c364258078811a3e9d" compoundref="Vector3_8h" startline="27">z</references>
      </memberdef>
      <memberdef kind="function" id="structVector3_1af0c657bdd493fcece630dc985a8e7378" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structVector3" kindref="compound">Vector3</ref> &amp;</type>
        <definition>Vector3 &amp; Vector3::operator-=</definition>
        <argsstring>(const Vector3 &amp;rhs)</argsstring>
        <name>operator-=</name>
        <param>
          <type>const <ref refid="structVector3" kindref="compound">Vector3</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>operator-= overload for vector subtraction and assignment </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structVector3" kindref="compound">Vector3</ref> to subtract with </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Resulting vector </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Common Library/Source/Vector3.h" line="42" column="1" bodyfile="Common Library/Source/Vector3.cpp" bodystart="157" bodyend="163"/>
        <references refid="structVector3_1a7e2d3237b29a2f29d7b3d8b2934e35f2" compoundref="Vector3_8h" startline="27">x</references>
        <references refid="structVector3_1a86eb35a9fa2d5a49e7fad66a35fa9c13" compoundref="Vector3_8h" startline="27">y</references>
        <references refid="structVector3_1aa8c9461eb24bd2c364258078811a3e9d" compoundref="Vector3_8h" startline="27">z</references>
      </memberdef>
      <memberdef kind="function" id="structVector3_1a7b7b7aa32bab9c687c193ffe2b169252" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structVector3" kindref="compound">Vector3</ref></type>
        <definition>Vector3 Vector3::operator-</definition>
        <argsstring>(void) const </argsstring>
        <name>operator-</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>operator- overload for unary negation </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Resulting vector </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Common Library/Source/Vector3.h" line="44" column="1" bodyfile="Common Library/Source/Vector3.cpp" bodystart="174" bodyend="177"/>
        <references refid="structVector3_1afa5e0c801fc2c8a820a54ea99302fe08" compoundref="Vector3_8cpp" startline="30" endline="32">Vector3</references>
        <references refid="structVector3_1a7e2d3237b29a2f29d7b3d8b2934e35f2" compoundref="Vector3_8h" startline="27">x</references>
        <references refid="structVector3_1a86eb35a9fa2d5a49e7fad66a35fa9c13" compoundref="Vector3_8h" startline="27">y</references>
        <references refid="structVector3_1aa8c9461eb24bd2c364258078811a3e9d" compoundref="Vector3_8h" startline="27">z</references>
      </memberdef>
      <memberdef kind="function" id="structVector3_1ab8bb1a236776d951a2e43b3ca9448bb2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structVector3" kindref="compound">Vector3</ref></type>
        <definition>Vector3 Vector3::operator*</definition>
        <argsstring>(float scalar) const </argsstring>
        <name>operator*</name>
        <param>
          <type>float</type>
          <declname>scalar</declname>
        </param>
        <briefdescription>
<para>operator* overload for scalar multiplication </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>scalar</parametername>
</parameternamelist>
<parameterdescription>
<para>- float to multiply with</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Resulting vector </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Common Library/Source/Vector3.h" line="46" column="1" bodyfile="Common Library/Source/Vector3.cpp" bodystart="189" bodyend="192"/>
        <references refid="structVector3_1afa5e0c801fc2c8a820a54ea99302fe08" compoundref="Vector3_8cpp" startline="30" endline="32">Vector3</references>
        <references refid="structVector3_1a7e2d3237b29a2f29d7b3d8b2934e35f2" compoundref="Vector3_8h" startline="27">x</references>
        <references refid="structVector3_1a86eb35a9fa2d5a49e7fad66a35fa9c13" compoundref="Vector3_8h" startline="27">y</references>
        <references refid="structVector3_1aa8c9461eb24bd2c364258078811a3e9d" compoundref="Vector3_8h" startline="27">z</references>
      </memberdef>
      <memberdef kind="function" id="structVector3_1ab337fe4b0c5fd44657f42427e265c982" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structVector3" kindref="compound">Vector3</ref> &amp;</type>
        <definition>Vector3 &amp; Vector3::operator*=</definition>
        <argsstring>(float scalar)</argsstring>
        <name>operator*=</name>
        <param>
          <type>float</type>
          <declname>scalar</declname>
        </param>
        <briefdescription>
<para>operator*= overload for scalar multiplication and assignment </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>scalar</parametername>
</parameternamelist>
<parameterdescription>
<para>float to multiply with </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Resulting vector </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Common Library/Source/Vector3.h" line="47" column="1" bodyfile="Common Library/Source/Vector3.cpp" bodystart="205" bodyend="211"/>
        <references refid="structVector3_1a7e2d3237b29a2f29d7b3d8b2934e35f2" compoundref="Vector3_8h" startline="27">x</references>
        <references refid="structVector3_1a86eb35a9fa2d5a49e7fad66a35fa9c13" compoundref="Vector3_8h" startline="27">y</references>
        <references refid="structVector3_1aa8c9461eb24bd2c364258078811a3e9d" compoundref="Vector3_8h" startline="27">z</references>
      </memberdef>
      <memberdef kind="function" id="structVector3_1ae084cfb19c537457f52bfb3cb3a7054d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Vector3::operator==</definition>
        <argsstring>(const Vector3 &amp;rhs) const </argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="structVector3" kindref="compound">Vector3</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>operator== overload for equality check, using <ref refid="namespaceMath_1a5ee876d5cb049f0b3b71f3c54ed8efa0" kindref="member">Math::EPSILON</ref> </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>vector to compare with</para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>None</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Resulting vector </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Common Library/Source/Vector3.h" line="49" column="1" bodyfile="Common Library/Source/Vector3.cpp" bodystart="225" bodyend="228"/>
        <references refid="structVector3_1abdc9a7f223e3628ed1cbccd107d49c44" compoundref="Vector3_8cpp" startline="13" endline="16">IsEqual</references>
        <references refid="structVector3_1a7e2d3237b29a2f29d7b3d8b2934e35f2" compoundref="Vector3_8h" startline="27">x</references>
        <references refid="structVector3_1a86eb35a9fa2d5a49e7fad66a35fa9c13" compoundref="Vector3_8h" startline="27">y</references>
        <references refid="structVector3_1aa8c9461eb24bd2c364258078811a3e9d" compoundref="Vector3_8h" startline="27">z</references>
      </memberdef>
      <memberdef kind="function" id="structVector3_1a27ba9abc0d1b5cd47a0365a4ebcfeb7c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool Vector3::operator!=</definition>
        <argsstring>(const Vector3 &amp;rhs) const </argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="structVector3" kindref="compound">Vector3</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>operator!= overload for inequality check, using <ref refid="namespaceMath_1a5ee876d5cb049f0b3b71f3c54ed8efa0" kindref="member">Math::EPSILON</ref> </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>vector to compare with </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Resulting vector </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Common Library/Source/Vector3.h" line="50" column="1" bodyfile="Common Library/Source/Vector3.cpp" bodystart="241" bodyend="244"/>
        <references refid="structVector3_1abdc9a7f223e3628ed1cbccd107d49c44" compoundref="Vector3_8cpp" startline="13" endline="16">IsEqual</references>
        <references refid="structVector3_1a7e2d3237b29a2f29d7b3d8b2934e35f2" compoundref="Vector3_8h" startline="27">x</references>
        <references refid="structVector3_1a86eb35a9fa2d5a49e7fad66a35fa9c13" compoundref="Vector3_8h" startline="27">y</references>
        <references refid="structVector3_1aa8c9461eb24bd2c364258078811a3e9d" compoundref="Vector3_8h" startline="27">z</references>
      </memberdef>
      <memberdef kind="function" id="structVector3_1afbfdb69cef54e84d72d05c3c141e315f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structVector3" kindref="compound">Vector3</ref> &amp;</type>
        <definition>Vector3 &amp; Vector3::operator=</definition>
        <argsstring>(const Vector3 &amp;rhs)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="structVector3" kindref="compound">Vector3</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Assignment operation (assign a vector to this vector) </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>Vector to assign </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A reference to this vector </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Common Library/Source/Vector3.h" line="52" column="1" bodyfile="Common Library/Source/Vector3.cpp" bodystart="256" bodyend="262"/>
        <references refid="structVector3_1a7e2d3237b29a2f29d7b3d8b2934e35f2" compoundref="Vector3_8h" startline="27">x</references>
        <references refid="structVector3_1a86eb35a9fa2d5a49e7fad66a35fa9c13" compoundref="Vector3_8h" startline="27">y</references>
        <references refid="structVector3_1aa8c9461eb24bd2c364258078811a3e9d" compoundref="Vector3_8h" startline="27">z</references>
      </memberdef>
      <memberdef kind="function" id="structVector3_1a200024a8442329de9a625ed58ffe7075" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Vector3::Length</definition>
        <argsstring>(void) const </argsstring>
        <name>Length</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return length of vector. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Length </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Common Library/Source/Vector3.h" line="54" column="1" bodyfile="Common Library/Source/Vector3.cpp" bodystart="273" bodyend="276"/>
        <references refid="structVector3_1a7e2d3237b29a2f29d7b3d8b2934e35f2" compoundref="Vector3_8h" startline="27">x</references>
        <references refid="structVector3_1a86eb35a9fa2d5a49e7fad66a35fa9c13" compoundref="Vector3_8h" startline="27">y</references>
        <references refid="structVector3_1aa8c9461eb24bd2c364258078811a3e9d" compoundref="Vector3_8h" startline="27">z</references>
        <referencedby refid="classSpaceVehicles_1a63617a030d2fc668c5f55b787aebc265" compoundref="SpaceVehicles_8cpp" startline="494" endline="499">SpaceVehicles::distanceFromCheckpoint</referencedby>
        <referencedby refid="structVector3_1aaef4f25a38878a640ab4a48002a7eff8" compoundref="Vector3_8cpp" startline="358" endline="367">Normalize</referencedby>
        <referencedby refid="structVector3_1a2da0f00c5529bced69763320dac9c414" compoundref="Vector3_8cpp" startline="337" endline="343">Normalized</referencedby>
      </memberdef>
      <memberdef kind="function" id="structVector3_1a87c90f81b4044393fe18f7a1e90f26df" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Vector3::LengthSquared</definition>
        <argsstring>(void) const </argsstring>
        <name>LengthSquared</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
<para>Return square of length of vector. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Length square </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Common Library/Source/Vector3.h" line="55" column="1" bodyfile="Common Library/Source/Vector3.cpp" bodystart="287" bodyend="290"/>
        <references refid="structVector3_1a7e2d3237b29a2f29d7b3d8b2934e35f2" compoundref="Vector3_8h" startline="27">x</references>
        <references refid="structVector3_1a86eb35a9fa2d5a49e7fad66a35fa9c13" compoundref="Vector3_8h" startline="27">y</references>
        <references refid="structVector3_1aa8c9461eb24bd2c364258078811a3e9d" compoundref="Vector3_8h" startline="27">z</references>
      </memberdef>
      <memberdef kind="function" id="structVector3_1a71b1271deb064c65f9dc7dba638c5b57" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float Vector3::Dot</definition>
        <argsstring>(const Vector3 &amp;rhs) const </argsstring>
        <name>Dot</name>
        <param>
          <type>const <ref refid="structVector3" kindref="compound">Vector3</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Dot product of 2 vectors. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>Point to calculate dot product with </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>float value of dot product </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Common Library/Source/Vector3.h" line="57" column="1" bodyfile="Common Library/Source/Vector3.cpp" bodystart="303" bodyend="306"/>
        <references refid="structVector3_1a7e2d3237b29a2f29d7b3d8b2934e35f2" compoundref="Vector3_8h" startline="27">x</references>
        <references refid="structVector3_1a86eb35a9fa2d5a49e7fad66a35fa9c13" compoundref="Vector3_8h" startline="27">y</references>
        <references refid="structVector3_1aa8c9461eb24bd2c364258078811a3e9d" compoundref="Vector3_8h" startline="27">z</references>
      </memberdef>
      <memberdef kind="function" id="structVector3_1aa1cdc5357009b47fe585ddd61e263aad" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structVector3" kindref="compound">Vector3</ref></type>
        <definition>Vector3 Vector3::Cross</definition>
        <argsstring>(const Vector3 &amp;rhs) const </argsstring>
        <name>Cross</name>
        <param>
          <type>const <ref refid="structVector3" kindref="compound">Vector3</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Cross product of 2 vectors. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>Point to calculate cross product with </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Vector of cross product </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Common Library/Source/Vector3.h" line="58" column="1" bodyfile="Common Library/Source/Vector3.cpp" bodystart="319" bodyend="322"/>
        <references refid="structVector3_1afa5e0c801fc2c8a820a54ea99302fe08" compoundref="Vector3_8cpp" startline="30" endline="32">Vector3</references>
        <references refid="structVector3_1a7e2d3237b29a2f29d7b3d8b2934e35f2" compoundref="Vector3_8h" startline="27">x</references>
        <references refid="structVector3_1a86eb35a9fa2d5a49e7fad66a35fa9c13" compoundref="Vector3_8h" startline="27">y</references>
        <references refid="structVector3_1aa8c9461eb24bd2c364258078811a3e9d" compoundref="Vector3_8h" startline="27">z</references>
        <referencedby refid="classCameraTPS_1a3394f9c1704b0b93c07c9e1dc16108ff" compoundref="CameraTPS_8cpp" startline="14" endline="33">CameraTPS::Init</referencedby>
        <referencedby refid="classCamera3_1a6b57f6672752e8c5dbcfa32d693c17fc" compoundref="Camera3_8cpp" startline="16" endline="36">Camera3::Init</referencedby>
        <referencedby refid="classPlayer_1a5b057a6cd421a056d2a0694ab00739e7" compoundref="Player_8cpp" startline="48" endline="174">Player::movementUpdate</referencedby>
        <referencedby refid="classMtx44_1a7c3d2d30d9ed5bfca2ba97d0e570930f" compoundref="Mtx44_8cpp" startline="433" endline="450">Mtx44::SetToLookAt</referencedby>
        <referencedby refid="classCamera3_1a00fd1ad6f418951e6d4c303e0b7e7fb0" compoundref="Camera3_8cpp" startline="180" endline="190">Camera3::tpsUpdate</referencedby>
        <referencedby refid="classCameraTPS_1a743d5fc45867e31a8915e47173d0fcb2" compoundref="CameraTPS_8cpp" startline="70" endline="114">CameraTPS::tpsUpdateVec</referencedby>
        <referencedby refid="classCamera3_1acc5d4103826cda6d20b80a0d35eacdbe" compoundref="Camera3_8cpp" startline="72" endline="145">Camera3::Update</referencedby>
      </memberdef>
      <memberdef kind="function" id="structVector3_1a2da0f00c5529bced69763320dac9c414" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structVector3" kindref="compound">Vector3</ref></type>
        <definition>Vector3 Vector3::Normalized</definition>
        <argsstring>(void) const </argsstring>
        <name>Normalized</name>
        <param>
          <type>void</type>
        </param>
        <exceptions> throw ( <ref refid="classDivideByZero" kindref="compound">DivideByZero</ref> )</exceptions>
        <briefdescription>
<para>Return a copy of this vector, normalized. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>Point to calculate distance from </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>Divide</parametername>
</parameternamelist>
<parameterdescription>
<para>by zero thrown if normalizing a zero vector </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Resulting normalized vector </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Common Library/Source/Vector3.h" line="62" column="1" bodyfile="Common Library/Source/Vector3.cpp" bodystart="337" bodyend="343"/>
        <references refid="namespaceMath_1a5ee876d5cb049f0b3b71f3c54ed8efa0" compoundref="MyMath_8h" startline="27">Math::EPSILON</references>
        <references refid="structVector3_1a200024a8442329de9a625ed58ffe7075" compoundref="Vector3_8cpp" startline="273" endline="276">Length</references>
        <references refid="structVector3_1afa5e0c801fc2c8a820a54ea99302fe08" compoundref="Vector3_8cpp" startline="30" endline="32">Vector3</references>
        <references refid="structVector3_1a7e2d3237b29a2f29d7b3d8b2934e35f2" compoundref="Vector3_8h" startline="27">x</references>
        <references refid="structVector3_1a86eb35a9fa2d5a49e7fad66a35fa9c13" compoundref="Vector3_8h" startline="27">y</references>
        <references refid="structVector3_1aa8c9461eb24bd2c364258078811a3e9d" compoundref="Vector3_8h" startline="27">z</references>
        <referencedby refid="classCameraTPS_1a3394f9c1704b0b93c07c9e1dc16108ff" compoundref="CameraTPS_8cpp" startline="14" endline="33">CameraTPS::Init</referencedby>
        <referencedby refid="classCamera3_1a6b57f6672752e8c5dbcfa32d693c17fc" compoundref="Camera3_8cpp" startline="16" endline="36">Camera3::Init</referencedby>
        <referencedby refid="classPlayer_1a5b057a6cd421a056d2a0694ab00739e7" compoundref="Player_8cpp" startline="48" endline="174">Player::movementUpdate</referencedby>
        <referencedby refid="classCamera3_1a00fd1ad6f418951e6d4c303e0b7e7fb0" compoundref="Camera3_8cpp" startline="180" endline="190">Camera3::tpsUpdate</referencedby>
        <referencedby refid="classCameraTPS_1a743d5fc45867e31a8915e47173d0fcb2" compoundref="CameraTPS_8cpp" startline="70" endline="114">CameraTPS::tpsUpdateVec</referencedby>
        <referencedby refid="classCamera3_1acc5d4103826cda6d20b80a0d35eacdbe" compoundref="Camera3_8cpp" startline="72" endline="145">Camera3::Update</referencedby>
      </memberdef>
      <memberdef kind="function" id="structVector3_1aaef4f25a38878a640ab4a48002a7eff8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structVector3" kindref="compound">Vector3</ref> &amp;</type>
        <definition>Vector3 &amp; Vector3::Normalize</definition>
        <argsstring>(void)</argsstring>
        <name>Normalize</name>
        <param>
          <type>void</type>
        </param>
        <exceptions> throw ( <ref refid="classDivideByZero" kindref="compound">DivideByZero</ref> )</exceptions>
        <briefdescription>
<para>Normalize this vector and return a reference to it. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>Point to calculate distance from </para></parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>Divide</parametername>
</parameternamelist>
<parameterdescription>
<para>by zero thrown if normalizing a zero vector </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reference to this vector </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Common Library/Source/Vector3.h" line="66" column="1" bodyfile="Common Library/Source/Vector3.cpp" bodystart="358" bodyend="367"/>
        <references refid="namespaceMath_1a5ee876d5cb049f0b3b71f3c54ed8efa0" compoundref="MyMath_8h" startline="27">Math::EPSILON</references>
        <references refid="structVector3_1a200024a8442329de9a625ed58ffe7075" compoundref="Vector3_8cpp" startline="273" endline="276">Length</references>
        <references refid="structVector3_1a7e2d3237b29a2f29d7b3d8b2934e35f2" compoundref="Vector3_8h" startline="27">x</references>
        <references refid="structVector3_1a86eb35a9fa2d5a49e7fad66a35fa9c13" compoundref="Vector3_8h" startline="27">y</references>
        <references refid="structVector3_1aa8c9461eb24bd2c364258078811a3e9d" compoundref="Vector3_8h" startline="27">z</references>
        <referencedby refid="classCameraTPS_1a3394f9c1704b0b93c07c9e1dc16108ff" compoundref="CameraTPS_8cpp" startline="14" endline="33">CameraTPS::Init</referencedby>
        <referencedby refid="classCamera3_1a6b57f6672752e8c5dbcfa32d693c17fc" compoundref="Camera3_8cpp" startline="16" endline="36">Camera3::Init</referencedby>
        <referencedby refid="classPlayer_1a5b057a6cd421a056d2a0694ab00739e7" compoundref="Player_8cpp" startline="48" endline="174">Player::movementUpdate</referencedby>
        <referencedby refid="classMtx44_1a7c3d2d30d9ed5bfca2ba97d0e570930f" compoundref="Mtx44_8cpp" startline="433" endline="450">Mtx44::SetToLookAt</referencedby>
        <referencedby refid="classCamera3_1a00fd1ad6f418951e6d4c303e0b7e7fb0" compoundref="Camera3_8cpp" startline="180" endline="190">Camera3::tpsUpdate</referencedby>
        <referencedby refid="classCameraTPS_1a743d5fc45867e31a8915e47173d0fcb2" compoundref="CameraTPS_8cpp" startline="70" endline="114">CameraTPS::tpsUpdateVec</referencedby>
        <referencedby refid="classCamera3_1acc5d4103826cda6d20b80a0d35eacdbe" compoundref="Camera3_8cpp" startline="72" endline="145">Camera3::Update</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="structVector3_1a2bb22d81325ba847b6c54c8ad769b5d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;os, Vector3 &amp;rhs)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <param>
          <type><ref refid="structVector3" kindref="compound">Vector3</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Common Library/Source/Vector3.h" line="68" column="1" bodyfile="Common Library/Source/Vector3.cpp" bodystart="369" bodyend="373"/>
      </memberdef>
      <memberdef kind="friend" id="structVector3_1ad0633cb4e51ffd5188e6b69e72209ab0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="structVector3" kindref="compound">Vector3</ref></type>
        <definition>Vector3 operator*</definition>
        <argsstring>(float scalar, const Vector3 &amp;rhs)</argsstring>
        <name>operator*</name>
        <param>
          <type>float</type>
          <declname>scalar</declname>
        </param>
        <param>
          <type>const <ref refid="structVector3" kindref="compound">Vector3</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Scalar product of scalar with vector. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>scalar</parametername>
</parameternamelist>
<parameterdescription>
<para>scalar value </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vector</parametername>
</parameternamelist>
<parameterdescription>
<para>vector </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Resulting vector </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Common Library/Source/Vector3.h" line="70" column="1" bodyfile="Common Library/Source/Vector3.cpp" bodystart="388" bodyend="391"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Defines a 3D vector and its methods. </para>    </briefdescription>
    <detaileddescription>
<para>Class <ref refid="structVector3" kindref="compound">Vector3</ref>: </para>    </detaileddescription>
    <collaborationgraph>
      <node id="1390">
        <label>float</label>
      </node>
      <node id="1389">
        <label>Vector3</label>
        <link refid="structVector3"/>
        <childnode refid="1390" relation="usage">
          <edgelabel>x</edgelabel>
          <edgelabel>y</edgelabel>
          <edgelabel>z</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="Common Library/Source/Vector3.h" line="26" column="1" bodyfile="Common Library/Source/Vector3.h" bodystart="25" bodyend="71"/>
    <listofallmembers>
      <member refid="structVector3_1aa1cdc5357009b47fe585ddd61e263aad" prot="public" virt="non-virtual"><scope>Vector3</scope><name>Cross</name></member>
      <member refid="structVector3_1a71b1271deb064c65f9dc7dba638c5b57" prot="public" virt="non-virtual"><scope>Vector3</scope><name>Dot</name></member>
      <member refid="structVector3_1abdc9a7f223e3628ed1cbccd107d49c44" prot="public" virt="non-virtual"><scope>Vector3</scope><name>IsEqual</name></member>
      <member refid="structVector3_1affeb6d657b146584b5cb0b42a0d6eaeb" prot="public" virt="non-virtual"><scope>Vector3</scope><name>IsZero</name></member>
      <member refid="structVector3_1a200024a8442329de9a625ed58ffe7075" prot="public" virt="non-virtual"><scope>Vector3</scope><name>Length</name></member>
      <member refid="structVector3_1a87c90f81b4044393fe18f7a1e90f26df" prot="public" virt="non-virtual"><scope>Vector3</scope><name>LengthSquared</name></member>
      <member refid="structVector3_1aaef4f25a38878a640ab4a48002a7eff8" prot="public" virt="non-virtual"><scope>Vector3</scope><name>Normalize</name></member>
      <member refid="structVector3_1a2da0f00c5529bced69763320dac9c414" prot="public" virt="non-virtual"><scope>Vector3</scope><name>Normalized</name></member>
      <member refid="structVector3_1a27ba9abc0d1b5cd47a0365a4ebcfeb7c" prot="public" virt="non-virtual"><scope>Vector3</scope><name>operator!=</name></member>
      <member refid="structVector3_1ab8bb1a236776d951a2e43b3ca9448bb2" prot="public" virt="non-virtual"><scope>Vector3</scope><name>operator*</name></member>
      <member refid="structVector3_1ad0633cb4e51ffd5188e6b69e72209ab0" prot="public" virt="non-virtual"><scope>Vector3</scope><name>operator*</name></member>
      <member refid="structVector3_1ab337fe4b0c5fd44657f42427e265c982" prot="public" virt="non-virtual"><scope>Vector3</scope><name>operator*=</name></member>
      <member refid="structVector3_1a90c345c2a67d220a474a6f209102634d" prot="public" virt="non-virtual"><scope>Vector3</scope><name>operator+</name></member>
      <member refid="structVector3_1a339c80afd026abb2e35a4ae88301928b" prot="public" virt="non-virtual"><scope>Vector3</scope><name>operator+=</name></member>
      <member refid="structVector3_1a224d913ac29766a57a5d7c96eb226b92" prot="public" virt="non-virtual"><scope>Vector3</scope><name>operator-</name></member>
      <member refid="structVector3_1a7b7b7aa32bab9c687c193ffe2b169252" prot="public" virt="non-virtual"><scope>Vector3</scope><name>operator-</name></member>
      <member refid="structVector3_1af0c657bdd493fcece630dc985a8e7378" prot="public" virt="non-virtual"><scope>Vector3</scope><name>operator-=</name></member>
      <member refid="structVector3_1a2bb22d81325ba847b6c54c8ad769b5d1" prot="public" virt="non-virtual"><scope>Vector3</scope><name>operator&lt;&lt;</name></member>
      <member refid="structVector3_1afbfdb69cef54e84d72d05c3c141e315f" prot="public" virt="non-virtual"><scope>Vector3</scope><name>operator=</name></member>
      <member refid="structVector3_1ae084cfb19c537457f52bfb3cb3a7054d" prot="public" virt="non-virtual"><scope>Vector3</scope><name>operator==</name></member>
      <member refid="structVector3_1a9c25d604bd52b162cfcb56302ef032bb" prot="public" virt="non-virtual"><scope>Vector3</scope><name>Set</name></member>
      <member refid="structVector3_1ac6c9b941ccefd7744eace77ceab16b56" prot="public" virt="non-virtual"><scope>Vector3</scope><name>SetZero</name></member>
      <member refid="structVector3_1afa5e0c801fc2c8a820a54ea99302fe08" prot="public" virt="non-virtual"><scope>Vector3</scope><name>Vector3</name></member>
      <member refid="structVector3_1ae1d084ff898241c341e322fba12ceed7" prot="public" virt="non-virtual"><scope>Vector3</scope><name>Vector3</name></member>
      <member refid="structVector3_1a7e2d3237b29a2f29d7b3d8b2934e35f2" prot="public" virt="non-virtual"><scope>Vector3</scope><name>x</name></member>
      <member refid="structVector3_1a86eb35a9fa2d5a49e7fad66a35fa9c13" prot="public" virt="non-virtual"><scope>Vector3</scope><name>y</name></member>
      <member refid="structVector3_1aa8c9461eb24bd2c364258078811a3e9d" prot="public" virt="non-virtual"><scope>Vector3</scope><name>z</name></member>
      <member refid="structVector3_1a5545e13e2e2861ece8f14b12a6a8101f" prot="public" virt="non-virtual"><scope>Vector3</scope><name>~Vector3</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
